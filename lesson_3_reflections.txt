When would you want to use a remote repository rather than keeping all your work local?

When I want to share my work with others or want to work with others in a colaborative way.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

That is because I may be working on those files, already done few commits and right now doing more changes which are not commited yet. 
Being Author of the files I can decide when those are ready to collaborate with others through pull. Otherwise it can lead to unintended changes 
in local code base or lead to conflicts, which I will not be able to resolve effectively as I am middle of something and yet to commit.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

fork: When you ask GitHub clone one existing GitHub repository(for which you don't have push permission) in it's own GitHub server and give you push permission for the clone repository.

clone: When you clone a GitHub repository in your own computer(local). You may or may not have push permission for the remote GitHub repository.

branch: When you label a commit-id in a repository it is called branch. You can check out a particular branch with it's label, can make changes on 
that branch and commit. By default a repository comes with only a master branch. You can create more branches when needed and work.

What is the benefit of having a copy of the last known state of the remote stored locally?

local copy of remote will be used while merging remote changes in your local copy or in other words while you update your local copy with the changes
in remote.


